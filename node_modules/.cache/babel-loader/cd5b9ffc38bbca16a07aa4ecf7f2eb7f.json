{"ast":null,"code":"var _jsxFileName = \"/Users/melon/hacker_news/src/App.js\";\nimport React, { Component, useState, useEffect } from \"react\";\n\nconst App = () => {\n  //state\n  const [news, setNews] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"react\");\n  const [url, setUrl] = useState(\"http://hn.algolia.com/api/v1/search?query=react\");\n  const [loading, setLoading] = useState(false); //fetch news\n\n  const fetchNews = () => {\n    //set loading true\n    setLoading(true);\n    fetch(url).then(result => result.json()).then(data => (setNews(data.hits), setLoading(false))).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    fetchNews();\n  }, [url]);\n\n  const handleChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setUrl(`http://hn.algolia.com/api/v1/search?query=${searchQuery}`);\n  };\n\n  const showLoading = () => loading ? React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Loading...\") : \"\";\n\n  const searchForm = () => React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: searchQuery,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Search\"));\n\n  const showNews = () => news.map((n, i) => React.createElement(\"p\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, n.title));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"News\"), showLoading(), searchForm(), showNews);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/melon/hacker_news/src/App.js"],"names":["React","Component","useState","useEffect","App","news","setNews","searchQuery","setSearchQuery","url","setUrl","loading","setLoading","fetchNews","fetch","then","result","json","data","hits","catch","error","console","log","handleChange","e","target","value","handleSubmit","preventDefault","showLoading","searchForm","showNews","map","n","i","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,OAAD,CAA9C;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAC5B,iDAD4B,CAA9B;AAGA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC,CAPgB,CAShB;;AACA,QAAMW,SAAS,GAAG,MAAM;AACtB;AACAD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,KAAK,CAACL,GAAD,CAAL,CACGM,IADH,CACQC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADlB,EAEGF,IAFH,CAEQG,IAAI,KAAKZ,OAAO,CAACY,IAAI,CAACC,IAAN,CAAP,EAAoBP,UAAU,CAAC,KAAD,CAAnC,CAFZ,EAGGQ,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHlB;AAID,GAPD;;AAQAlB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACJ,GAAD,CAFM,CAAT;;AAIA,QAAMe,YAAY,GAAGC,CAAC,IAAI;AACxBjB,IAAAA,cAAc,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACI,cAAF;AACAnB,IAAAA,MAAM,CAAE,6CAA4CH,WAAY,EAA1D,CAAN;AACD,GAHD;;AAKA,QAAMuB,WAAW,GAAG,MAAOnB,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,GAAyB,EAA3D;;AAEA,QAAMoB,UAAU,GAAG,MACjB;AAAM,IAAA,QAAQ,EAAEH,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAErB,WAA1B;AAAuC,IAAA,QAAQ,EAAEiB,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF;;AAOA,QAAMQ,QAAQ,GAAG,MAAM3B,IAAI,CAAC4B,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAAG,IAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYD,CAAC,CAACE,KAAd,CAAnB,CAAvB;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,WAAW,EAFd,EAGGC,UAAU,EAHb,EAIGC,QAJH,CADF;AAQD,CAlDD;;AAoDA,eAAe5B,GAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\n\nconst App = () => {\n  //state\n  const [news, setNews] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"react\");\n  const [url, setUrl] = useState(\n    \"http://hn.algolia.com/api/v1/search?query=react\"\n  );\n  const [loading, setLoading] = useState(false);\n\n  //fetch news\n  const fetchNews = () => {\n    //set loading true\n    setLoading(true);\n    fetch(url)\n      .then(result => result.json())\n      .then(data => (setNews(data.hits), setLoading(false)))\n      .catch(error => console.log(error));\n  };\n  useEffect(() => {\n    fetchNews();\n  }, [url]);\n\n  const handleChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setUrl(`http://hn.algolia.com/api/v1/search?query=${searchQuery}`);\n  };\n\n  const showLoading = () => (loading ? <h2>Loading...</h2> : \"\");\n\n  const searchForm = () => (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={searchQuery} onChange={handleChange} />\n      <button>Search</button>\n    </form>\n  );\n\n  const showNews = () => news.map((n, i) => <p key={i}>{n.title}</p>);\n\n  return (\n    <div>\n      <h2>News</h2>\n      {showLoading()}\n      {searchForm()}\n      {showNews}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}